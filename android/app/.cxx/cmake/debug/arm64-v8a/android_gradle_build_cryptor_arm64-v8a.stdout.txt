ninja: Entering directory `E:\Practises\Flutter\development\flutter_chat\android\app\.cxx\cmake\debug\arm64-v8a'
[1/2] Building CXX object CMakeFiles/cryptor.dir/E_/Practises/Flutter/development/flutter_chat/src/cryptor.cpp.o
E:/Practises/Flutter/development/flutter_chat/src/cryptor.cpp:5:24: warning: 'crypt' has C-linkage specified, but returns user-defined type 'std::string' (aka 'basic_string<char, char_traits<char>, allocator<char> >') which is incompatible with C [-Wreturn-type-c-linkage]
extern "C" std::string crypt(std::string str,bool bencrypt){
                       ^
E:/Practises/Flutter/development/flutter_chat/src/cryptor.cpp:19:24: warning: 'encrypt' has C-linkage specified, but returns user-defined type 'std::string' (aka 'basic_string<char, char_traits<char>, allocator<char> >') which is incompatible with C [-Wreturn-type-c-linkage]
extern "C" std::string encrypt(std::string str){
                       ^
E:/Practises/Flutter/development/flutter_chat/src/cryptor.cpp:23:24: warning: 'decrypt' has C-linkage specified, but returns user-defined type 'std::string' (aka 'basic_string<char, char_traits<char>, allocator<char> >') which is incompatible with C [-Wreturn-type-c-linkage]
extern "C" std::string decrypt(std::string str){
                       ^
3 warnings generated.
[2/2] Linking CXX shared library E:\Practises\Flutter\development\flutter_chat\build\app\intermediates\cmake\debug\obj\arm64-v8a\libcryptor.so
